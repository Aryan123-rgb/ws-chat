// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String
  rooms     UserToRoom[]
  messages  Messages[]
}

model Room {
  id              String        @id @default(uuid())
  name            String       
  description     String
  type            RoomType
  users           UserToRoom[]
  messages        Messages[]
  directKey       String?       @unique // used to identify one-to-one chat created using userId1 + userId2
}

model UserToRoom {
  id              String       @id @default(uuid())
  userId          String
  user            User         @relation(fields: [userId], references: [id])
  roomId          String
  room            Room         @relation(fields: [roomId], references: [id])
  joinedAt        DateTime     @default(now())
  @@unique([roomId, userId])
}

model Messages {
  id              String        @id @default(uuid())
  content         String
  userId          String
  user            User          @relation(fields: [userId], references: [id])
  roomId          String      
  room            Room          @relation(fields: [roomId], references: [id])
}

enum RoomType {
  Public
  Private
  Direct
}
